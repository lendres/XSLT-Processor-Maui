<?xml version="1.0" encoding="utf-8" ?>
<dptkcontrols:DigitalProductionMainPage
	xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
	xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:dptkcontrols="clr-namespace:DigitalProduction.Maui.Controls;assembly=DigitalProduction.Maui.AppToolkit"
	xmlns:dpconverters="clr-namespace:DigitalProduction.Maui.Converters;assembly=DigitalProduction.Maui.AppToolkit"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
	xmlns:viewmodel="clr-namespace:XSLTProcessorMaui"
	x:DataType="viewmodel:MainViewModel"
	x:Class="XSLTProcessorMaui.MainPage">

	<ContentPage.MenuBarItems>
		<MenuBarItem Text="File">
			<MenuFlyoutItem Text="Setitngs..." Clicked="OnSettings"/>
			<MenuFlyoutItem Text="Exit" Clicked="OnExit"/>
		</MenuBarItem>
		<MenuBarItem Text="Help">
			<MenuFlyoutItem Text="About..." Clicked="OnAbout"/>
		</MenuBarItem>
	</ContentPage.MenuBarItems>

	<ContentPage.Resources>
		<toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
		<dpconverters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter"/>
	</ContentPage.Resources>

	<VerticalStackLayout Padding="0" Spacing="0">
		<VerticalStackLayout Padding="30,0,30,10" Spacing="20" IsVisible="{Binding ShowErrors}">
			<Border Style="{StaticResource MessageBoxStyle}">
				<Label Text="{Binding CommandLineErrorMessage}" FontFamily="IBMPlexMono-Regular" LineBreakMode="WordWrap"/>
			</Border>
			<Button 
				Text="Close"
				HorizontalOptions="Fill"
				StyleClass="StandardSizeButtonStyle"
				Command="{Binding DismissErrorsCommand}"/>
		</VerticalStackLayout>

		<VerticalStackLayout Padding="30,0,30,10" Spacing="0" IsVisible="{Binding ShowErrors, Converter={StaticResource InvertedBoolConverter}}">
			<!-- XSLT Processing -->
			<Border StyleClass="TitleBorder">
				<Label
					Text="XSLT Processing"
					StyleClass="DivisionHeader"/>
			</Border>
			<!--<Border StyleClass="DivisionBorder"/>-->

			<Grid
				RowDefinitions="27,Auto,25,27,Auto,25,27,Auto,25,27,Auto,25,27,Auto,17"
				RowSpacing="0"
				ColumnDefinitions="*,100"
				ColumnSpacing="8">

				<!-- XML input file. -->
				<Label
					Grid.Row="0" Grid.Column="0"
					Text="XML Input File" StyleClass="ControlLabel"/>
				<Entry
					Grid.Row="1" Grid.Column="0"
					x:Name="XmlInputFileEntry"
					Placeholder="XML File"
					Text="{Binding XmlInputFile.Value}"
					HorizontalOptions="Fill">
					<Entry.Behaviors>
						<toolkit:EventToCommandBehavior
							x:TypeArguments="system:EventArgs"
							Command="{Binding ValidateXmlInputFileCommand}"
							BindingContext="{Binding Path=BindingContext, Source={x:Reference XmlInputFileEntry}, x:DataType=Entry}"
							EventName="TextChanged"/>
					</Entry.Behaviors>
				</Entry>
				<Label
					Grid.Row="2" Grid.Column="0"
					Text="{Binding XmlInputFile.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					StyleClass="InvalidLabelStyle"/>
				<Button
					Grid.Row="1" Grid.Column="1"
					Text="Browse"
					SemanticProperties.Hint="Browse for the XML file."
					Clicked="OnBrowseForXmlInputFile"
					StyleClass="StandardSizeButtonStyle"
					HorizontalOptions="Center"
					VerticalOptions="Fill"/>

				<!-- XSLT file. -->
				<Label
					Grid.Row="3" Grid.Column="0"
					Text="XSLT File" StyleClass="ControlLabel"/>
				<Entry
					Grid.Row="4" Grid.Column="0"
					x:Name="XsltFileEntry"
					Placeholder="XSLT File"
					Text="{Binding XsltFile.Value}"
					HorizontalOptions="Fill">
					<Entry.Behaviors>
						<toolkit:EventToCommandBehavior
							x:TypeArguments="system:EventArgs"
							Command="{Binding ValidateXsltFileCommand}"
							BindingContext="{Binding Path=BindingContext, Source={x:Reference XsltFileEntry}, x:DataType=Entry}"
							EventName="TextChanged"/>
					</Entry.Behaviors>
				</Entry>
				<Label
					Grid.Row="5" Grid.Column="0"
					Text="{Binding XsltFile.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					StyleClass="InvalidLabelStyle"/>
				<Button
					Grid.Row="4" Grid.Column="1"
					Text="Browse"
					SemanticProperties.Hint="Browse for the XSLT file."
					Clicked="OnBrowseForXsltFile"
					StyleClass="StandardSizeButtonStyle"
					HorizontalOptions="Center"
					VerticalOptions="Fill"/>

				<!-- XSLT arguments. -->
				<Label
					Grid.Row="6" Grid.Column="0"
					Text="XSLT Arguments" StyleClass="ControlLabel"/>
				<Entry
					Grid.Row="7" Grid.Column="0"
					x:Name="XsltArgumentsEntry"
					Placeholder="XSLT Arguments"
					Text="{Binding XsltArguments.Value}"
					HorizontalOptions="Fill">
					<!--<Entry.Behaviors>
							<toolkit:EventToCommandBehavior Command="{Binding ValidateXsltArgumentsCommand}" EventName="TextChanged"/>
						</Entry.Behaviors>-->
				</Entry>
				<!--<Label
						Grid.Row="8" Grid.Column="0"
						Text="{Binding XsltArguments.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
						StyleClass="InvalidLabelStyle"/>-->
				<Button
					Grid.Row="7" Grid.Column="1"
					Text="Clear"
					SemanticProperties.Hint="Clear the XSLT arguments."
					Command="{Binding ClearXsltArgumentsCommand}"
					StyleClass="StandardSizeButtonStyle"
					HorizontalOptions="Center"
					VerticalOptions="Fill"/>

				<!-- Output file. -->
				<Label
					Grid.Row="9" Grid.Column="0"
					Text="Output File" StyleClass="ControlLabel"/>
				<Entry
					Grid.Row="10" Grid.Column="0"
					x:Name="OutputFileEntry"
					Placeholder="Output File"
					Text="{Binding OutputFile.Value}"
					HorizontalOptions="Fill">
					<Entry.Behaviors>
						<toolkit:EventToCommandBehavior
							x:TypeArguments="system:EventArgs"
							Command="{Binding ValidateOutputFileCommand}"
							BindingContext="{Binding Path=BindingContext, Source={x:Reference OutputFileEntry}, x:DataType=Entry}"
							EventName="TextChanged"/>
					</Entry.Behaviors>
				</Entry>
				<Label
					Grid.Row="11" Grid.Column="0"
					Text="{Binding OutputFile.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					StyleClass="InvalidLabelStyle"/>
				<!--<Button
						Grid.Row="10" Grid.Column="1"
						Text="Clear"
						SemanticProperties.Hint="Browse for the output file."
						Clicked="OnBrowseForOutputFile"
						HorizontalOptions="Center"
						VerticalOptions="Fill"/>-->

				<!-- Output directory. -->
				<Label
					Grid.Row="12" Grid.Column="0"
					Text="Output Directory" StyleClass="ControlLabel"/>
				<Entry
					Grid.Row="13" Grid.Column="0"
					x:Name="OutputDirectoryEntry"
					Placeholder="Output Directory"
					Text="{Binding OutputDirectory.Value}"
					HorizontalOptions="Fill">
					<Entry.Behaviors>
						<toolkit:EventToCommandBehavior
							x:TypeArguments="system:EventArgs"
							Command="{Binding ValidateOutputDirectoryCommand}"
							BindingContext="{Binding Path=BindingContext, Source={x:Reference OutputDirectoryEntry}, x:DataType=Entry}"
							EventName="TextChanged"/>
					</Entry.Behaviors>
				</Entry>
				<Label
					Grid.Row="14" Grid.Column="0"
					Text="{Binding OutputDirectory.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					StyleClass="InvalidLabelStyle"/>
				<Button
					Grid.Row="13" Grid.Column="1"
					Text="Browse"
					SemanticProperties.Hint="Browse for the output directory."
					Clicked="OnBrowseForOutputDirectory"
					StyleClass="StandardSizeButtonStyle"
					HorizontalOptions="Center"
					VerticalOptions="Fill"/>
			</Grid>

			<!-- Post Processing -->
			<Border StyleClass="TitleBorder" Margin="0,12,0,10">
				<Label
					Text="Post Processing"
					StyleClass="DivisionHeader"/>
			</Border>
			<!--<Border StyleClass="DivisionBorder"/>-->

			<Grid
				RowDefinitions="Auto,Auto,17"
				RowSpacing="0"
				ColumnDefinitions="*,100"
				ColumnSpacing="8">
				<!-- The checkbox seems to fudge the spacing hard.  A forced hack of a fix is used. -->
				<VerticalStackLayout Grid.Row="0" Grid.Column="0" Padding="0" Margin="0,6,0,0" Spacing="0" VerticalOptions="Center">
					<!-- Force the height to be smaller than it wants to be to take up the unwanted spacing. -->
					<HorizontalStackLayout Padding="0" Spacing="0" VerticalOptions="Center" HeightRequest="22">
						<CheckBox
							IsChecked="{Binding RunPostprocessing}"
							VerticalOptions="Center"/>
						<!-- Enlarge the label so the desenders don't get cut off. -->
						<Label Text="Run Postprocessing" VerticalOptions="Center" Margin="0" HeightRequest="25" Padding="0"/>
					</HorizontalStackLayout>
					<!-- Pad the bottom to provide spacing before the next element. -->
					<HorizontalStackLayout  Padding="0" Spacing="0" HeightRequest="8"/>
				</VerticalStackLayout>
				<Entry
					Grid.Row="1" Grid.Column="0"
					x:Name="PostprocessorEntry"
					Placeholder="Postprocessor"
					Text="{Binding Postprocessor.Value}"
					HorizontalOptions="Fill"
					IsEnabled="{Binding RunPostprocessing}">
					<Entry.Behaviors>
						<toolkit:EventToCommandBehavior
							x:TypeArguments="system:EventArgs"
							Command="{Binding ValidatePostprocessorCommand}"
							BindingContext="{Binding Path=BindingContext, Source={x:Reference PostprocessorEntry}, x:DataType=Entry}"
							EventName="TextChanged"/>
					</Entry.Behaviors>
				</Entry>
				<Label
					Grid.Row="2" Grid.Column="0"
					Text="{Binding Postprocessor.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					StyleClass="InvalidLabelStyle"/>
				<Button
					Grid.Row="1" Grid.Column="1"
					Text="Browse"
					SemanticProperties.Hint="Browse for the postprocessing file."
					Clicked="OnBrowseForPostProcessor"
					StyleClass="StandardSizeButtonStyle"
					HorizontalOptions="Center"
					VerticalOptions="Fill"
					IsEnabled="{Binding RunPostprocessing}"/>
			</Grid>

			<!-- Bottom Buttons -->
			<Border Grid.Row="0" StyleClass="DivisionBorder" Margin="0,12,0,10"/>
			<HorizontalStackLayout
				x:Name="HorizontalStackForButton"
				Grid.Row="1"
				StyleClass="BottomButtonRowStyle"
				Margin="0,10,0,20">
				<Button 
					Text="Process"
					x:Name="ProcessButton"
					HorizontalOptions="End"
					IsEnabled="{Binding IsSubmittable}"
					Clicked="OnProcessButtonClicked"
					StyleClass="StandardSizeButtonStyle"/>
				<Button 
					Text="Close"
					HorizontalOptions="End"
					Clicked="OnExit"
					StyleClass="StandardSizeButtonStyle"/>
			</HorizontalStackLayout>
		</VerticalStackLayout>

		<!--
			An invisible label used as a flag so we can close the application from the same thread as the UI is on.  This is a terrible method,
			but I cannot figure out a better one.  For now, it works.
		-->
		<Label x:Name="FlagLabel" Text="{Binding Flag}" PropertyChanged="FlagPropertyChanged" IsVisible="False"/>

	</VerticalStackLayout>

</dptkcontrols:DigitalProductionMainPage>